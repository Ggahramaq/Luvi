const { SlashCommandBuilder } = require('discord.js');
const { PermissionFlagsBits, EmbedBuilder } = require('discord.js');
const warningSchema = require('../../Schemas/warnSchema');
module.exports = {
    data: new SlashCommandBuilder()
        .setName('warns')
        .setDescription('–ü–æ–∫–∞–∂–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ª—é–±–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')
        .addUserOption(option => option.setName('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å').setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —É –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è.').setRequired(true))
        .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),
    async execute(client, interaction) {

        const { options, guild } = interaction;
        const target = options.getUser('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');

        const embed = new EmbedBuilder();
        const noWarns = new EmbedBuilder();

        const data = await warningSchema.find({ GuildID: guild.id, UserID: target.id });
        if (data.length > 0) {
            const warnsInData = [];
            let index = 1;
            for (const value of data) {const {Content} = value;
            warnsInData.push(`
                        **üî¢„Éª–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:** ${index}
                        **üìú„Éª–ü—Ä–∏—á–∏–Ω–∞:** ${Content[0].Reason}
            `);
            index++;
            }
            
            embed.setColor("Orange")
                .setDescription(`> üìú **–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è ${target.tag} :**
                ${warnsInData.join('\n')}`)

            interaction.reply({embeds: [embed]});
        } else {
            noWarns.setColor('Orange')
                .setDescription(`–£ ${target.username} 0 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π!`);

            interaction.reply({ embeds: [noWarns] });
        }
        
    }
};
